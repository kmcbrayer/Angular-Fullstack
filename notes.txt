- turn off stupid touch controls for desktop
    fixme
- make pageset a backend service?
  rethink pageset objects
  maybe turn pageset into a class like object?
  move page turn fxns to pageSetService
- make navbar links just change position of pages and not link to new url, set active...
- use grunt for production:
  set siteName
  set move everything to a public directory
  stuff
- checkboxes for adding and removing feeds:
  pillbox - pull right, pageSet.list use active maybe?
- write new tests
  0. mock objects for service data
  1. all services return data:
    length !== 0
  2. main page dataList concats feeds
    length == var ammount
  3. main page sorts feeds correctly
    use mock objets.date

- Write E2E tests
    clear and logged in stuff:
        see states_tests.txt
- better sort algorythm for mainpage
- research refresh tokens
- feature: pull to refresh
    -timestamp api calls from backend
    -if inside 5 min hit cache
    -if force param is used dont hit cache
        || req.param('force') == true
    -scope.pullToRefresh = function() {
        $http({
            url : 'api/blah/blah',
            method : "GET",
            params : {force : true}
        ).success(function(data) {
            dataList = data;
        });
    }

best media queries:
http://stackoverflow.com/questions/13637106/what-are-the-best-width-ranges-for-media-queries

deployment procedure
    -main site (from kmcbrayer_com dir): uwsgi --socket :8001 --wsgi-file com/wsgi.py

    -set node like " SET NODE_ENV production"
    -figure out a way to do a deployment. heroku?


E2E tests:
in /Feeder, run:
    webdriver-manager update
    webdriver-manager start
go to 'http://www.devsite.com:4444/wd/hub/static/resource/hub.html'
thats it for now look into test/e2e/test-spec.js

Postgres:
db superusername - postgres, pw - km0***
decent breakdown
https://gigadom.wordpress.com/2014/07/20/working-with-node-js-and-postgresql/

Forever:
in /home/Feeder
    stop: forever stopall
    start: forever start server.js

images:
settings gear:
    http://thenounproject.com/term/gear/2789/

google developer console:
https://console.developers.google.com/project



